<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1749194735259' version='4.7.3' timestamp='1749194719925'><Project projectName='transfer-service'><Jar>/Users/nag/java-devsecops/play-with-devsecops/transfer-service/target/classes</Jar><AuxClasspathEntry>/Users/nag/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/java-devsecops/play-with-devsecops/calculator-util/target/calculator-util-1.0-SNAPSHOT.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter/3.5.0/spring-boot-starter-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot/3.5.0/spring-boot-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-context/6.2.7/spring-context-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.5.0/spring-boot-autoconfigure-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.5.0/spring-boot-starter-logging-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-core/6.2.7/spring-core-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-jcl/6.2.7/spring-jcl-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/yaml/snakeyaml/2.4/snakeyaml-2.4.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-data-jdbc/3.5.0/spring-boot-starter-data-jdbc-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.5.0/spring-boot-starter-jdbc-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/zaxxer/HikariCP/6.3.0/HikariCP-6.3.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-jdbc/6.2.7/spring-jdbc-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/data/spring-data-jdbc/3.5.0/spring-data-jdbc-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/data/spring-data-relational/3.5.0/spring-data-relational-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/data/spring-data-commons/3.5.0/spring-data-commons-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-tx/6.2.7/spring-tx-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-beans/6.2.7/spring-beans-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.5.0/spring-boot-starter-data-jpa-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/hibernate/orm/hibernate-core/6.6.15.Final/hibernate-core-6.6.15.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/net/bytebuddy/byte-buddy/1.17.5/byte-buddy-1.17.5.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/data/spring-data-jpa/3.5.0/spring-data-jpa-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-orm/6.2.7/spring-orm-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-aop/6.2.7/spring-aop-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-aspects/6.2.7/spring-aspects-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.5.0/spring-boot-starter-web-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.5.0/spring-boot-starter-json-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.19.0/jackson-databind-2.19.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.19.0/jackson-annotations-2.19.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.19.0/jackson-core-2.19.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.19.0/jackson-datatype-jdk8-2.19.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.19.0/jackson-datatype-jsr310-2.19.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.19.0/jackson-module-parameter-names-2.19.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.5.0/spring-boot-starter-tomcat-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.41/tomcat-embed-core-10.1.41.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.41/tomcat-embed-el-10.1.41.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.41/tomcat-embed-websocket-10.1.41.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-web/6.2.7/spring-web-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/io/micrometer/micrometer-observation/1.15.0/micrometer-observation-1.15.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/io/micrometer/micrometer-commons/1.15.0/micrometer-commons-1.15.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-webmvc/6.2.7/spring-webmvc-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-expression/6.2.7/spring-expression-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/postgresql/postgresql/42.7.1/postgresql-42.7.1.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.5.0/spring-boot-starter-test-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-test/3.5.0/spring-boot-test-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.5.0/spring-boot-test-autoconfigure-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/net/minidev/json-smart/2.5.2/json-smart-2.5.2.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/net/minidev/accessors-smart/2.5.2/accessors-smart-2.5.2.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/ow2/asm/asm/9.7.1/asm-9.7.1.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/assertj/assertj-core/3.27.3/assertj-core-3.27.3.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/awaitility/awaitility/4.3.0/awaitility-4.3.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/mockito/mockito-core/5.17.0/mockito-core-5.17.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.5/byte-buddy-agent-1.17.5.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/mockito/mockito-junit-jupiter/5.17.0/mockito-junit-jupiter-5.17.0.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/springframework/spring-test/6.2.7/spring-test-6.2.7.jar</AuxClasspathEntry><AuxClasspathEntry>/Users/nag/.m2/repository/org/xmlunit/xmlunit-core/2.10.1/xmlunit-core-2.10.1.jar</AuxClasspathEntry><Plugin id='com.h3xstream.findsecbugs' enabled='true'></Plugin><SrcDir>/Users/nag/java-devsecops/play-with-devsecops/transfer-service/src/main/java</SrcDir><SrcDir>/Users/nag/java-devsecops/play-with-devsecops/transfer-service/target/generated-sources/annotations</SrcDir><WrkDir>/Users/nag/java-devsecops/play-with-devsecops/transfer-service/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='dab0efab926cefd9a729437d567dc569' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.TrafficSimulator' primary='true'><SourceLine classname='com.example.TrafficSimulator' start='20' end='54' sourcepath='com/example/TrafficSimulator.java' sourcefile='TrafficSimulator.java'><Message>At TrafficSimulator.java:[lines 20-54]</Message></SourceLine><Message>In class com.example.TrafficSimulator</Message></Class><Method isStatic='true' classname='com.example.TrafficSimulator' signature='([Ljava/lang/String;)V' name='main' primary='true'><SourceLine endBytecode='346' classname='com.example.TrafficSimulator' start='30' end='54' sourcepath='com/example/TrafficSimulator.java' sourcefile='TrafficSimulator.java' startBytecode='0'></SourceLine><Message>In method com.example.TrafficSimulator.main(String[])</Message></Method><SourceLine endBytecode='122' classname='com.example.TrafficSimulator' start='47' end='47' sourcepath='com/example/TrafficSimulator.java' sourcefile='TrafficSimulator.java' startBytecode='122' primary='true'><Message>At TrafficSimulator.java:[line 47]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/service/TransferService.transfer(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;'><Message>Unknown source com/example/service/TransferService.transfer(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='bb4662b5b5c90744b0fc9a248161a433' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>This random generator (java.util.Random) is predictable</LongMessage><Class classname='com.example.TrafficSimulator' primary='true'><SourceLine classname='com.example.TrafficSimulator' start='20' end='54' sourcepath='com/example/TrafficSimulator.java' sourcefile='TrafficSimulator.java'><Message>At TrafficSimulator.java:[lines 20-54]</Message></SourceLine><Message>In class com.example.TrafficSimulator</Message></Class><Method isStatic='true' classname='com.example.TrafficSimulator' signature='()V' name='&lt;clinit&gt;' primary='true'><SourceLine endBytecode='67' classname='com.example.TrafficSimulator' start='22' end='26' sourcepath='com/example/TrafficSimulator.java' sourcefile='TrafficSimulator.java' startBytecode='0'></SourceLine><Message>In method com.example.TrafficSimulator.&lt;static initializer for TrafficSimulator&gt;()</Message></Method><SourceLine endBytecode='29' classname='com.example.TrafficSimulator' start='26' end='26' sourcepath='com/example/TrafficSimulator.java' sourcefile='TrafficSimulator.java' startBytecode='29' primary='true'><Message>At TrafficSimulator.java:[line 26]</Message></SourceLine><String value='java.util.Random'><Message>Value java.util.Random</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1c2c57462d88ccab00d961af16fdc91c' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>com.example.api.TransferController is a Spring endpoint (Controller)</LongMessage><Class classname='com.example.api.TransferController' primary='true'><SourceLine classname='com.example.api.TransferController' start='16' end='34' sourcepath='com/example/api/TransferController.java' sourcefile='TransferController.java'><Message>At TransferController.java:[lines 16-34]</Message></SourceLine><Message>In class com.example.api.TransferController</Message></Class><Method isStatic='false' classname='com.example.api.TransferController' signature='(Lcom/example/dto/TransferRequest;)Lorg/springframework/http/ResponseEntity;' name='handleTransfer' primary='true'><SourceLine endBytecode='125' classname='com.example.api.TransferController' start='30' end='34' sourcepath='com/example/api/TransferController.java' sourcefile='TransferController.java' startBytecode='0'></SourceLine><Message>In method com.example.api.TransferController.handleTransfer(TransferRequest)</Message></Method><SourceLine synthetic='true' endBytecode='125' classname='com.example.api.TransferController' start='30' end='34' sourcepath='com/example/api/TransferController.java' sourcefile='TransferController.java' startBytecode='0'><Message>At TransferController.java:[lines 30-34]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dd50997d4f39b09ed7b1aea5ece46fdd' rank='19' abbrev='SnVI' category='BAD_PRACTICE' priority='3' type='SE_NO_SERIALVERSIONID' instanceOccurrenceMax='0'><ShortMessage>Class is Serializable, but doesn't define serialVersionUID</ShortMessage><LongMessage>com.example.model.Account is Serializable; consider declaring a serialVersionUID</LongMessage><Class classname='com.example.model.Account' primary='true'><SourceLine classname='com.example.model.Account' start='12' end='74' sourcepath='com/example/model/Account.java' sourcefile='Account.java'><Message>At Account.java:[lines 12-74]</Message></SourceLine><Message>In class com.example.model.Account</Message></Class><SourceLine synthetic='true' classname='com.example.model.Account' start='12' end='74' sourcepath='com/example/model/Account.java' sourcefile='Account.java'><Message>At Account.java:[lines 12-74]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ef27dcb79a69de7f88170fdc166930c' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v1' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v1' start='32' end='100' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java'><Message>At JdbcAccountRepository_v1.java:[lines 32-100]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v1</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v1' signature='(Ljava/lang/String;)Lcom/example/model/Account;' name='findByAccountNumber' primary='true'><SourceLine endBytecode='794' classname='com.example.repository.JdbcAccountRepository_v1' start='39' end='70' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v1.findByAccountNumber(String)</Message></Method><SourceLine endBytecode='172' classname='com.example.repository.JdbcAccountRepository_v1' start='60' end='60' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='172' primary='true'><Message>At JdbcAccountRepository_v1.java:[line 60]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='ef27dcb79a69de7f88170fdc166930c' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v1' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v1' start='32' end='100' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java'><Message>At JdbcAccountRepository_v1.java:[lines 32-100]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v1</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v1' signature='(Ljava/lang/String;)Lcom/example/model/Account;' name='findByAccountNumber' primary='true'><SourceLine endBytecode='794' classname='com.example.repository.JdbcAccountRepository_v1' start='39' end='70' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v1.findByAccountNumber(String)</Message></Method><SourceLine endBytecode='240' classname='com.example.repository.JdbcAccountRepository_v1' start='67' end='67' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='240' primary='true'><Message>At JdbcAccountRepository_v1.java:[line 67]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='15b0883ef700e20f3785a8a60eb6b032' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v1' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v1' start='32' end='100' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java'><Message>At JdbcAccountRepository_v1.java:[lines 32-100]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v1</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v1' signature='(Lcom/example/model/Account;)V' name='updateAccount' primary='true'><SourceLine endBytecode='637' classname='com.example.repository.JdbcAccountRepository_v1' start='77' end='100' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v1.updateAccount(Account)</Message></Method><SourceLine endBytecode='135' classname='com.example.repository.JdbcAccountRepository_v1' start='90' end='90' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='135' primary='true'><Message>At JdbcAccountRepository_v1.java:[line 90]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='15b0883ef700e20f3785a8a60eb6b032' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v1' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v1' start='32' end='100' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java'><Message>At JdbcAccountRepository_v1.java:[lines 32-100]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v1</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v1' signature='(Lcom/example/model/Account;)V' name='updateAccount' primary='true'><SourceLine endBytecode='637' classname='com.example.repository.JdbcAccountRepository_v1' start='77' end='100' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v1.updateAccount(Account)</Message></Method><SourceLine endBytecode='198' classname='com.example.repository.JdbcAccountRepository_v1' start='96' end='96' sourcepath='com/example/repository/JdbcAccountRepository_v1.java' sourcefile='JdbcAccountRepository_v1.java' startBytecode='198' primary='true'><Message>At JdbcAccountRepository_v1.java:[line 96]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='18a4870d4225fb9695ff9b9b5d287ca5' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v2' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v2' start='36' end='109' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java'><Message>At JdbcAccountRepository_v2.java:[lines 36-109]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v2</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v2' signature='(Ljava/lang/String;)Lcom/example/model/Account;' name='findByAccountNumber' primary='true'><SourceLine endBytecode='800' classname='com.example.repository.JdbcAccountRepository_v2' start='48' end='79' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v2.findByAccountNumber(String)</Message></Method><SourceLine endBytecode='178' classname='com.example.repository.JdbcAccountRepository_v2' start='69' end='69' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='178' primary='true'><Message>At JdbcAccountRepository_v2.java:[line 69]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='18a4870d4225fb9695ff9b9b5d287ca5' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v2' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v2' start='36' end='109' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java'><Message>At JdbcAccountRepository_v2.java:[lines 36-109]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v2</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v2' signature='(Ljava/lang/String;)Lcom/example/model/Account;' name='findByAccountNumber' primary='true'><SourceLine endBytecode='800' classname='com.example.repository.JdbcAccountRepository_v2' start='48' end='79' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v2.findByAccountNumber(String)</Message></Method><SourceLine endBytecode='246' classname='com.example.repository.JdbcAccountRepository_v2' start='76' end='76' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='246' primary='true'><Message>At JdbcAccountRepository_v2.java:[line 76]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1f25989ffa715dc9bc2b48723da79333' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v2' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v2' start='36' end='109' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java'><Message>At JdbcAccountRepository_v2.java:[lines 36-109]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v2</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v2' signature='(Lcom/example/model/Account;)V' name='updateAccount' primary='true'><SourceLine endBytecode='643' classname='com.example.repository.JdbcAccountRepository_v2' start='86' end='109' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v2.updateAccount(Account)</Message></Method><SourceLine endBytecode='141' classname='com.example.repository.JdbcAccountRepository_v2' start='99' end='99' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='141' primary='true'><Message>At JdbcAccountRepository_v2.java:[line 99]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='1f25989ffa715dc9bc2b48723da79333' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v2' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v2' start='36' end='109' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java'><Message>At JdbcAccountRepository_v2.java:[lines 36-109]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v2</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v2' signature='(Lcom/example/model/Account;)V' name='updateAccount' primary='true'><SourceLine endBytecode='643' classname='com.example.repository.JdbcAccountRepository_v2' start='86' end='109' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v2.updateAccount(Account)</Message></Method><SourceLine endBytecode='204' classname='com.example.repository.JdbcAccountRepository_v2' start='105' end='105' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='204' primary='true'><Message>At JdbcAccountRepository_v2.java:[line 105]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Exception.getMessage()Ljava/lang/String;'><Message>Unknown source java/lang/Exception.getMessage()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='33d7cf6ff4dac6c7f40ed22c113f0769' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>new com.example.repository.JdbcAccountRepository_v2(DataSource) may expose internal representation by storing an externally mutable object into JdbcAccountRepository_v2.dataSource</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v2' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v2' start='36' end='109' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java'><Message>At JdbcAccountRepository_v2.java:[lines 36-109]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v2</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v2' signature='(Ljavax/sql/DataSource;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='69' classname='com.example.repository.JdbcAccountRepository_v2' start='41' end='43' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='0'></SourceLine><Message>In method new com.example.repository.JdbcAccountRepository_v2(DataSource)</Message></Method><Field isStatic='false' classname='com.example.repository.JdbcAccountRepository_v2' signature='Ljavax/sql/DataSource;' name='dataSource' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v2' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java'><Message>In JdbcAccountRepository_v2.java</Message></SourceLine><Message>Field com.example.repository.JdbcAccountRepository_v2.dataSource</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='6' name='dataSource' register='1'><Message>Local variable named dataSource</Message></LocalVariable><SourceLine endBytecode='6' classname='com.example.repository.JdbcAccountRepository_v2' start='42' end='42' sourcepath='com/example/repository/JdbcAccountRepository_v2.java' sourcefile='JdbcAccountRepository_v2.java' startBytecode='6' primary='true'><Message>At JdbcAccountRepository_v2.java:[line 42]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='937bf8a77c9bab14f0815165235b12c4' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v3' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v3' start='36' end='72' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java'><Message>At JdbcAccountRepository_v3.java:[lines 36-72]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v3</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v3' signature='(Ljava/lang/String;)Lcom/example/model/Account;' name='findByAccountNumber' primary='true'><SourceLine endBytecode='149' classname='com.example.repository.JdbcAccountRepository_v3' start='49' end='60' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v3.findByAccountNumber(String)</Message></Method><SourceLine endBytecode='38' classname='com.example.repository.JdbcAccountRepository_v3' start='58' end='58' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='38' primary='true'><Message>At JdbcAccountRepository_v3.java:[line 58]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/repository/JdbcAccountRepository_v3.findByAccountNumber(Ljava/lang/String;)Lcom/example/model/Account; parameter 0'><Message>Unknown source com/example/repository/JdbcAccountRepository_v3.findByAccountNumber(Ljava/lang/String;)Lcom/example/model/Account; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3945cbedc674b8c8730fedfd310d8240' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v3' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v3' start='36' end='72' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java'><Message>At JdbcAccountRepository_v3.java:[lines 36-72]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v3</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v3' signature='(Lcom/example/model/Account;)V' name='updateAccount' primary='true'><SourceLine endBytecode='176' classname='com.example.repository.JdbcAccountRepository_v3' start='65' end='72' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v3.updateAccount(Account)</Message></Method><SourceLine endBytecode='46' classname='com.example.repository.JdbcAccountRepository_v3' start='68' end='68' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='46' primary='true'><Message>At JdbcAccountRepository_v3.java:[line 68]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/model/Account.number'><Message>Unknown source com/example/model/Account.number</Message></String><String role='Unknown source' value='com/example/model/Account.getNumber()Ljava/lang/String;'><Message>Unknown source com/example/model/Account.getNumber()Ljava/lang/String;</Message></String><SourceLine endBytecode='1' classname='com.example.model.Account' start='37' end='37' sourcepath='com/example/model/Account.java' sourcefile='Account.java' startBytecode='1'><Message>At Account.java:[line 37]</Message></SourceLine><SourceLine endBytecode='43' classname='com.example.repository.JdbcAccountRepository_v3' start='68' end='68' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='43'><Message>At JdbcAccountRepository_v3.java:[line 68]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='284eb5831973e5c52e83f1656fe80528' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v3' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v3' start='36' end='72' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java'><Message>At JdbcAccountRepository_v3.java:[lines 36-72]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v3</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v3' signature='(Lcom/example/model/Account;)V' name='updateAccount' primary='true'><SourceLine endBytecode='176' classname='com.example.repository.JdbcAccountRepository_v3' start='65' end='72' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='0'></SourceLine><Message>In method com.example.repository.JdbcAccountRepository_v3.updateAccount(Account)</Message></Method><SourceLine endBytecode='63' classname='com.example.repository.JdbcAccountRepository_v3' start='70' end='70' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='63' primary='true'><Message>At JdbcAccountRepository_v3.java:[line 70]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/model/Account.number'><Message>Unknown source com/example/model/Account.number</Message></String><String role='Unknown source' value='com/example/model/Account.getNumber()Ljava/lang/String;'><Message>Unknown source com/example/model/Account.getNumber()Ljava/lang/String;</Message></String><SourceLine endBytecode='1' classname='com.example.model.Account' start='37' end='37' sourcepath='com/example/model/Account.java' sourcefile='Account.java' startBytecode='1'><Message>At Account.java:[line 37]</Message></SourceLine><SourceLine endBytecode='60' classname='com.example.repository.JdbcAccountRepository_v3' start='70' end='70' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='60'><Message>At JdbcAccountRepository_v3.java:[line 70]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fd5af95611c620858667c8897db19d54' cweid='374' rank='18' abbrev='EI2' category='MALICIOUS_CODE' priority='2' type='EI_EXPOSE_REP2' instanceOccurrenceMax='0'><ShortMessage>May expose internal representation by incorporating reference to mutable object</ShortMessage><LongMessage>new com.example.repository.JdbcAccountRepository_v3(DataSource) may expose internal representation by storing an externally mutable object into JdbcAccountRepository_v3.dataSource</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v3' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v3' start='36' end='72' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java'><Message>At JdbcAccountRepository_v3.java:[lines 36-72]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v3</Message></Class><Method isStatic='false' classname='com.example.repository.JdbcAccountRepository_v3' signature='(Ljavax/sql/DataSource;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='85' classname='com.example.repository.JdbcAccountRepository_v3' start='42' end='45' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='0'></SourceLine><Message>In method new com.example.repository.JdbcAccountRepository_v3(DataSource)</Message></Method><Field isStatic='false' classname='com.example.repository.JdbcAccountRepository_v3' signature='Ljavax/sql/DataSource;' name='dataSource' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v3' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java'><Message>In JdbcAccountRepository_v3.java</Message></SourceLine><Message>Field com.example.repository.JdbcAccountRepository_v3.dataSource</Message></Field><LocalVariable role='LOCAL_VARIABLE_NAMED' pc='6' name='dataSource' register='1'><Message>Local variable named dataSource</Message></LocalVariable><SourceLine endBytecode='6' classname='com.example.repository.JdbcAccountRepository_v3' start='43' end='43' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='6' primary='true'><Message>At JdbcAccountRepository_v3.java:[line 43]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='40623f9e8a2400d1676991348e6b55f' rank='18' abbrev='UrF' category='PERFORMANCE' priority='2' type='URF_UNREAD_FIELD' instanceOccurrenceMax='0'><ShortMessage>Unread field</ShortMessage><LongMessage>Unread field: com.example.repository.JdbcAccountRepository_v3.dataSource</LongMessage><Class classname='com.example.repository.JdbcAccountRepository_v3' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v3' start='36' end='72' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java'><Message>At JdbcAccountRepository_v3.java:[lines 36-72]</Message></SourceLine><Message>In class com.example.repository.JdbcAccountRepository_v3</Message></Class><Field isStatic='false' classname='com.example.repository.JdbcAccountRepository_v3' signature='Ljavax/sql/DataSource;' name='dataSource' primary='true'><SourceLine classname='com.example.repository.JdbcAccountRepository_v3' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java'><Message>In JdbcAccountRepository_v3.java</Message></SourceLine><Message>Field com.example.repository.JdbcAccountRepository_v3.dataSource</Message></Field><SourceLine endBytecode='6' classname='com.example.repository.JdbcAccountRepository_v3' start='43' end='43' sourcepath='com/example/repository/JdbcAccountRepository_v3.java' sourcefile='JdbcAccountRepository_v3.java' startBytecode='6' primary='true'><Message>At JdbcAccountRepository_v3.java:[line 43]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='efc1ee3c6df14bedc72f3fdcc6e8d62f' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.service.UPITransferService' primary='true'><SourceLine classname='com.example.service.UPITransferService' start='18' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java'><Message>At UPITransferService.java:[lines 18-65]</Message></SourceLine><Message>In class com.example.service.UPITransferService</Message></Class><Method isStatic='false' classname='com.example.service.UPITransferService' signature='(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;' name='transfer' primary='true'><SourceLine endBytecode='514' classname='com.example.service.UPITransferService' start='32' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='0'></SourceLine><Message>In method com.example.service.UPITransferService.transfer(TransferRequest)</Message></Method><SourceLine endBytecode='11' classname='com.example.service.UPITransferService' start='32' end='32' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='11' primary='true'><Message>At UPITransferService.java:[line 32]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Thread.getName()Ljava/lang/String;'><Message>Unknown source java/lang/Thread.getName()Ljava/lang/String;</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f91ea8ce88d827e4ac4c95e3c710f0e8' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.service.UPITransferService' primary='true'><SourceLine classname='com.example.service.UPITransferService' start='18' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java'><Message>At UPITransferService.java:[lines 18-65]</Message></SourceLine><Message>In class com.example.service.UPITransferService</Message></Class><Method isStatic='false' classname='com.example.service.UPITransferService' signature='(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;' name='transfer' primary='true'><SourceLine endBytecode='514' classname='com.example.service.UPITransferService' start='32' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='0'></SourceLine><Message>In method com.example.service.UPITransferService.transfer(TransferRequest)</Message></Method><SourceLine endBytecode='67' classname='com.example.service.UPITransferService' start='42' end='42' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='67' primary='true'><Message>At UPITransferService.java:[line 42]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.getFromAccountNumber()Ljava/lang/String;'><Message>Unknown source com/example/dto/TransferRequest.getFromAccountNumber()Ljava/lang/String;</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.fromAccountNumber'><Message>Unknown source com/example/dto/TransferRequest.fromAccountNumber</Message></String><SourceLine endBytecode='1' classname='com.example.dto.TransferRequest' start='16' end='16' sourcepath='com/example/dto/TransferRequest.java' sourcefile='TransferRequest.java' startBytecode='1'><Message>At TransferRequest.java:[line 16]</Message></SourceLine><SourceLine endBytecode='17' classname='com.example.service.UPITransferService' start='34' end='34' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='17'><Message>At UPITransferService.java:[line 34]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e49b2178ef7a3b16e83170ad5669aa4' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.service.UPITransferService' primary='true'><SourceLine classname='com.example.service.UPITransferService' start='18' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java'><Message>At UPITransferService.java:[lines 18-65]</Message></SourceLine><Message>In class com.example.service.UPITransferService</Message></Class><Method isStatic='false' classname='com.example.service.UPITransferService' signature='(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;' name='transfer' primary='true'><SourceLine endBytecode='514' classname='com.example.service.UPITransferService' start='32' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='0'></SourceLine><Message>In method com.example.service.UPITransferService.transfer(TransferRequest)</Message></Method><SourceLine endBytecode='93' classname='com.example.service.UPITransferService' start='46' end='46' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='93' primary='true'><Message>At UPITransferService.java:[line 46]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.toAccountNumber'><Message>Unknown source com/example/dto/TransferRequest.toAccountNumber</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.getToAccountNumber()Ljava/lang/String;'><Message>Unknown source com/example/dto/TransferRequest.getToAccountNumber()Ljava/lang/String;</Message></String><SourceLine endBytecode='1' classname='com.example.dto.TransferRequest' start='17' end='17' sourcepath='com/example/dto/TransferRequest.java' sourcefile='TransferRequest.java' startBytecode='1'><Message>At TransferRequest.java:[line 17]</Message></SourceLine><SourceLine endBytecode='22' classname='com.example.service.UPITransferService' start='35' end='35' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='22'><Message>At UPITransferService.java:[line 35]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='526d51eb2e69bf4e29bde48108cff222' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.service.UPITransferService' primary='true'><SourceLine classname='com.example.service.UPITransferService' start='18' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java'><Message>At UPITransferService.java:[lines 18-65]</Message></SourceLine><Message>In class com.example.service.UPITransferService</Message></Class><Method isStatic='false' classname='com.example.service.UPITransferService' signature='(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;' name='transfer' primary='true'><SourceLine endBytecode='514' classname='com.example.service.UPITransferService' start='32' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='0'></SourceLine><Message>In method com.example.service.UPITransferService.transfer(TransferRequest)</Message></Method><SourceLine endBytecode='153' classname='com.example.service.UPITransferService' start='51' end='51' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='153' primary='true'><Message>At UPITransferService.java:[line 51]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.getFromAccountNumber()Ljava/lang/String;'><Message>Unknown source com/example/dto/TransferRequest.getFromAccountNumber()Ljava/lang/String;</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.fromAccountNumber'><Message>Unknown source com/example/dto/TransferRequest.fromAccountNumber</Message></String><SourceLine endBytecode='1' classname='com.example.dto.TransferRequest' start='16' end='16' sourcepath='com/example/dto/TransferRequest.java' sourcefile='TransferRequest.java' startBytecode='1'><Message>At TransferRequest.java:[line 16]</Message></SourceLine><SourceLine endBytecode='17' classname='com.example.service.UPITransferService' start='34' end='34' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='17'><Message>At UPITransferService.java:[line 34]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9df85f18426f1160ef04652d305d440f' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.service.UPITransferService' primary='true'><SourceLine classname='com.example.service.UPITransferService' start='18' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java'><Message>At UPITransferService.java:[lines 18-65]</Message></SourceLine><Message>In class com.example.service.UPITransferService</Message></Class><Method isStatic='false' classname='com.example.service.UPITransferService' signature='(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;' name='transfer' primary='true'><SourceLine endBytecode='514' classname='com.example.service.UPITransferService' start='32' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='0'></SourceLine><Message>In method com.example.service.UPITransferService.transfer(TransferRequest)</Message></Method><SourceLine endBytecode='203' classname='com.example.service.UPITransferService' start='55' end='55' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='203' primary='true'><Message>At UPITransferService.java:[line 55]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.toAccountNumber'><Message>Unknown source com/example/dto/TransferRequest.toAccountNumber</Message></String><String role='Unknown source' value='com/example/dto/TransferRequest.getToAccountNumber()Ljava/lang/String;'><Message>Unknown source com/example/dto/TransferRequest.getToAccountNumber()Ljava/lang/String;</Message></String><SourceLine endBytecode='1' classname='com.example.dto.TransferRequest' start='17' end='17' sourcepath='com/example/dto/TransferRequest.java' sourcefile='TransferRequest.java' startBytecode='1'><Message>At TransferRequest.java:[line 17]</Message></SourceLine><SourceLine endBytecode='22' classname='com.example.service.UPITransferService' start='35' end='35' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='22'><Message>At UPITransferService.java:[line 35]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='efc1ee3c6df14bedc72f3fdcc6e8d62f' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='1'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='com.example.service.UPITransferService' primary='true'><SourceLine classname='com.example.service.UPITransferService' start='18' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java'><Message>At UPITransferService.java:[lines 18-65]</Message></SourceLine><Message>In class com.example.service.UPITransferService</Message></Class><Method isStatic='false' classname='com.example.service.UPITransferService' signature='(Lcom/example/dto/TransferRequest;)Lcom/example/dto/TransferResponse;' name='transfer' primary='true'><SourceLine endBytecode='514' classname='com.example.service.UPITransferService' start='32' end='65' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='0'></SourceLine><Message>In method com.example.service.UPITransferService.transfer(TransferRequest)</Message></Method><SourceLine endBytecode='241' classname='com.example.service.UPITransferService' start='59' end='59' sourcepath='com/example/service/UPITransferService.java' sourcefile='UPITransferService.java' startBytecode='241' primary='true'><Message>At UPITransferService.java:[line 59]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/lang/Thread.getName()Ljava/lang/String;'><Message>Unknown source java/lang/Thread.getName()Ljava/lang/String;</Message></String></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='MALICIOUS_CODE'><Description>Malicious code vulnerability</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugCategory category='SECURITY'><Description>Security</Description></BugCategory><BugPattern cweid='117' abbrev='SECCRLFLOG' category='SECURITY' type='CRLF_INJECTION_LOGS'><ShortDescription>Potential CRLF Injection for logs</ShortDescription><Details>
            
&lt;p&gt;
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;Code at risk:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
&lt;/pre&gt;

A malicious user could send the metadata parameter with the value: &lt;code&gt;"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"&lt;/code&gt;.
&lt;/p&gt;

&lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
&lt;p&gt;
You can manually sanitize each parameter.
&lt;pre&gt;
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack &lt;a href="https://logback.qos.ch/manual/layouts.html#replace"&gt;using the &lt;code&gt;replace&lt;/code&gt; function&lt;/a&gt;.
&lt;pre&gt;
&amp;lt;pattern&amp;gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&amp;lt;/pattern&amp;gt;
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
Finally, you can use a logger implementation that replace new line by spaces.
The project &lt;a href="https://github.com/javabeanz/owasp-security-logging"&gt;OWASP Security Logging&lt;/a&gt; has an implementation for Logback and Log4j.
&lt;/p&gt;

&lt;br/&gt;
&lt;p&gt;
    &lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
    &lt;a href="https://cwe.mitre.org/data/definitions/117.html"&gt;CWE-117: Improper Output Neutralization for Logs&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://cwe.mitre.org/data/definitions/93.html"&gt;CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://logback.qos.ch/manual/layouts.html#replace"&gt;CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://github.com/javabeanz/owasp-security-logging"&gt;OWASP Security Logging&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;


        </Details></BugPattern><BugPattern cweid='374' abbrev='EI2' category='MALICIOUS_CODE' type='EI_EXPOSE_REP2'><ShortDescription>May expose internal representation by incorporating reference to mutable object</ShortDescription><Details>

  &lt;p&gt; This code stores a reference to an externally mutable object into the
  internal representation of the object.&amp;nbsp;
   If instances
   are accessed by untrusted code, and unchecked changes to
   the mutable object would compromise security or other
   important properties, you will need to do something different.
  Storing a copy of the object is better approach in many situations.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='SECSC' category='SECURITY' type='SPRING_ENDPOINT'><ShortDescription>Found Spring endpoint</ShortDescription><Details>
            
&lt;p&gt;This class is a Spring Controller. All methods annotated with &lt;code&gt;RequestMapping&lt;/code&gt; (as well as its shortcut annotations &lt;code&gt;GetMapping&lt;/code&gt;, &lt;code&gt;PostMapping&lt;/code&gt;, &lt;code&gt;PutMapping&lt;/code&gt;, &lt;code&gt;DeleteMapping&lt;/code&gt;, and &lt;code&gt;PatchMapping&lt;/code&gt;) are reachable remotely.
This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.&lt;/p&gt;

        </Details></BugPattern><BugPattern abbrev='UrF' category='PERFORMANCE' type='URF_UNREAD_FIELD'><ShortDescription>Unread field</ShortDescription><Details>

  &lt;p&gt; This field is never read.&amp;nbsp; Consider removing it from the class.&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='330' abbrev='SECPR' category='SECURITY' type='PREDICTABLE_RANDOM'><ShortDescription>Predictable pseudorandom number generator</ShortDescription><Details>
            
&lt;p&gt;The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token&lt;/li&gt;
&lt;li&gt;a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form&lt;/li&gt;
&lt;li&gt;any other secret value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
A quick fix could be to replace the use of &lt;code&gt;java.util.Random&lt;/code&gt; with something stronger, such as &lt;code&gt;java.security.SecureRandom&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Solution:&lt;/b&gt;
&lt;pre&gt;import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html"&gt;Cracking Random Number Generators - Part 1 (https://jazzy.id.au)&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers"&gt;CERT: MSC02-J. Generate strong random numbers&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/330.html"&gt;CWE-330: Use of Insufficiently Random Values&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html"&gt;Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern abbrev='SnVI' category='BAD_PRACTICE' type='SE_NO_SERIALVERSIONID'><ShortDescription>Class is Serializable, but doesn't define serialVersionUID</ShortDescription><Details>

  &lt;p&gt; This class implements the &lt;code&gt;Serializable&lt;/code&gt; interface, but does
  not define a &lt;code&gt;serialVersionUID&lt;/code&gt; field.&amp;nbsp;
  A change as simple as adding a reference to a .class object
    will add synthetic fields to the class,
   which will unfortunately change the implicit
   serialVersionUID (e.g., adding a reference to &lt;code&gt;String.class&lt;/code&gt;
   will generate a static field &lt;code&gt;class$java$lang$String&lt;/code&gt;).
   Also, different source code to bytecode compilers may use different
   naming conventions for synthetic variables generated for
   references to class objects or inner classes.
   To ensure interoperability of Serializable across versions,
   consider adding an explicit serialVersionUID.&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='SECPR'><Description>Predictable Pseudo Random Generator</Description></BugCode><BugCode abbrev='SECSC'><Description>Spring Endpoint</Description></BugCode><BugCode abbrev='SECCRLFLOG'><Description>CRLF Injection for logs</Description></BugCode><BugCode abbrev='UrF'><Description>Unread field</Description></BugCode><BugCode abbrev='SnVI'><Description>Serializable class with no Version ID</Description></BugCode><BugCode abbrev='EI2'><Description>Storing reference to mutable object</Description></BugCode><Errors missingClasses='2' errors='0'><MissingClass>makeConcatWithConstants</MissingClass><MissingClass>mapRow</MissingClass></Errors><FindBugsSummary num_packages='7' total_classes='16' priority_2='4' priority_3='28' total_size='332' clock_seconds='2.93' referenced_classes='98' vm_version='17.0.8+9-LTS-211' total_bugs='32' java_version='17.0.8' gc_seconds='0.04' alloc_mbytes='512.00' cpu_seconds='10.45' peak_mbytes='236.34' timestamp='Fri, 6 Jun 2025 12:55:19 +0530'><FileStats path='com/example/TrafficSimulator.java' size='24' bugHash='ac8811c264153f9b4d058897d5d2aef9' bugCount='2'></FileStats><FileStats path='com/example/api/TransferController.java' size='9' bugHash='6efc6eded91511b87b7707d702c2cb2e' bugCount='1'></FileStats><FileStats path='com/example/dto/TransferRequest.java' size='23' bugCount='0'></FileStats><FileStats path='com/example/dto/TransferResponse.java' size='21' bugCount='0'></FileStats><FileStats path='com/example/exception/DataAccessException.java' size='10' bugCount='0'></FileStats><FileStats path='com/example/exception/DataUpdateException.java' size='10' bugCount='0'></FileStats><FileStats path='com/example/model/Account.java' size='40' bugHash='4f2b09e282c9fb9933ca433edf69a120' bugCount='1'></FileStats><FileStats path='com/example/repository/AccountRepository.java' size='3' bugCount='0'></FileStats><FileStats path='com/example/repository/JdbcAccountRepository_v1.java' size='46' bugHash='a670770842db89d3e7e1ed3f0c3f46fd' bugCount='4'></FileStats><FileStats path='com/example/repository/JdbcAccountRepository_v2.java' size='49' bugHash='0cd789a3a3cb546e112e0aac5eb650ca' bugCount='5'></FileStats><FileStats path='com/example/repository/JdbcAccountRepository_v3.java' size='29' bugHash='84b9425152e36c0c5968679038bc9a52' bugCount='5'></FileStats><FileStats path='com/example/repository/JpaAccountRepository.java' size='9' bugCount='0'></FileStats><FileStats path='com/example/repository/MockAccountRepository.java' size='13' bugCount='0'></FileStats><FileStats path='com/example/repository/PostgresConnectionFactory.java' size='9' bugCount='0'></FileStats><FileStats path='com/example/service/TransferService.java' size='2' bugCount='0'></FileStats><FileStats path='com/example/service/UPITransferService.java' size='35' bugHash='0d1bafa5453864e6cb1740d02202b7d9' bugCount='6'></FileStats><PackageStats package='com.example' total_bugs='2' priority_2='1' priority_3='1' total_size='24' total_types='1'><ClassStats bugs='2' size='24' priority_2='1' priority_3='1' interface='false' sourceFile='TrafficSimulator.java' class='com.example.TrafficSimulator'></ClassStats></PackageStats><PackageStats package='com.example.api' total_bugs='1' priority_3='1' total_size='9' total_types='1'><ClassStats bugs='1' size='9' priority_3='1' interface='false' sourceFile='TransferController.java' class='com.example.api.TransferController'></ClassStats></PackageStats><PackageStats package='com.example.dto' total_bugs='0' total_size='44' total_types='2'><ClassStats bugs='0' size='23' interface='false' sourceFile='TransferRequest.java' class='com.example.dto.TransferRequest'></ClassStats><ClassStats bugs='0' size='21' interface='false' sourceFile='TransferResponse.java' class='com.example.dto.TransferResponse'></ClassStats></PackageStats><PackageStats package='com.example.exception' total_bugs='0' total_size='20' total_types='2'><ClassStats bugs='0' size='10' interface='false' sourceFile='DataAccessException.java' class='com.example.exception.DataAccessException'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='DataUpdateException.java' class='com.example.exception.DataUpdateException'></ClassStats></PackageStats><PackageStats package='com.example.model' total_bugs='1' priority_3='1' total_size='40' total_types='1'><ClassStats bugs='1' size='40' priority_3='1' interface='false' sourceFile='Account.java' class='com.example.model.Account'></ClassStats></PackageStats><PackageStats package='com.example.repository' total_bugs='22' priority_2='3' priority_3='19' total_size='158' total_types='7'><ClassStats bugs='0' size='3' interface='true' sourceFile='AccountRepository.java' class='com.example.repository.AccountRepository'></ClassStats><ClassStats bugs='8' size='46' priority_3='8' interface='false' sourceFile='JdbcAccountRepository_v1.java' class='com.example.repository.JdbcAccountRepository_v1'></ClassStats><ClassStats bugs='9' size='49' priority_2='1' priority_3='8' interface='false' sourceFile='JdbcAccountRepository_v2.java' class='com.example.repository.JdbcAccountRepository_v2'></ClassStats><ClassStats bugs='5' size='29' priority_2='2' priority_3='3' interface='false' sourceFile='JdbcAccountRepository_v3.java' class='com.example.repository.JdbcAccountRepository_v3'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='JpaAccountRepository.java' class='com.example.repository.JpaAccountRepository'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='MockAccountRepository.java' class='com.example.repository.MockAccountRepository'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='PostgresConnectionFactory.java' class='com.example.repository.PostgresConnectionFactory'></ClassStats></PackageStats><PackageStats package='com.example.service' total_bugs='6' priority_3='6' total_size='37' total_types='2'><ClassStats bugs='0' size='2' interface='true' sourceFile='TransferService.java' class='com.example.service.TransferService'></ClassStats><ClassStats bugs='6' size='35' priority_3='6' interface='false' sourceFile='UPITransferService.java' class='com.example.service.UPITransferService'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='475' totalMilliseconds='477' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='14767' standardDeviationMicrosecondsPerInvocation='1055' invocations='1005'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1331' totalMilliseconds='130' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='16003' standardDeviationMicrosecondsPerInvocation='2446' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1054' totalMilliseconds='103' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='9496' standardDeviationMicrosecondsPerInvocation='1930' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='346' totalMilliseconds='103' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='3142' standardDeviationMicrosecondsPerInvocation='441' invocations='298'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='86' totalMilliseconds='87' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='3108' standardDeviationMicrosecondsPerInvocation='117' invocations='1011'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='683' totalMilliseconds='66' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='21010' standardDeviationMicrosecondsPerInvocation='2246' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='235' totalMilliseconds='44' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='10797' standardDeviationMicrosecondsPerInvocation='837' invocations='191'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='46' totalMilliseconds='44' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='836' standardDeviationMicrosecondsPerInvocation='91' invocations='962'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='595' totalMilliseconds='38' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='6819' standardDeviationMicrosecondsPerInvocation='1094' invocations='64'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='364' totalMilliseconds='35' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='4794' standardDeviationMicrosecondsPerInvocation='803' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='545' totalMilliseconds='35' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='3879' standardDeviationMicrosecondsPerInvocation='871' invocations='65'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='543' totalMilliseconds='35' name='com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine' maxMicrosecondsPerInvocation='4994' standardDeviationMicrosecondsPerInvocation='920' invocations='65'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='354' totalMilliseconds='34' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='2408' standardDeviationMicrosecondsPerInvocation='553' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='353' totalMilliseconds='34' name='edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis' maxMicrosecondsPerInvocation='20900' standardDeviationMicrosecondsPerInvocation='2102' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='476' totalMilliseconds='30' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='6900' standardDeviationMicrosecondsPerInvocation='975' invocations='65'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='448' totalMilliseconds='30' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='22792' standardDeviationMicrosecondsPerInvocation='2732' invocations='68'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='456' totalMilliseconds='29' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='4849' standardDeviationMicrosecondsPerInvocation='774' invocations='65'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='293' totalMilliseconds='28' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='7357' standardDeviationMicrosecondsPerInvocation='819' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='282' totalMilliseconds='27' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='2403' standardDeviationMicrosecondsPerInvocation='513' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='279' totalMilliseconds='27' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='2871' standardDeviationMicrosecondsPerInvocation='602' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='400' totalMilliseconds='27' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='7229' standardDeviationMicrosecondsPerInvocation='913' invocations='68'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='381' totalMilliseconds='24' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='2358' standardDeviationMicrosecondsPerInvocation='526' invocations='65'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='213' totalMilliseconds='20' name='edu.umd.cs.findbugs.detect.ReflectiveClasses' maxMicrosecondsPerInvocation='1909' standardDeviationMicrosecondsPerInvocation='396' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='208' totalMilliseconds='20' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' maxMicrosecondsPerInvocation='8938' standardDeviationMicrosecondsPerInvocation='1039' invocations='98'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='262' totalMilliseconds='19' name='edu.umd.cs.findbugs.classfile.impl.ZipCodeBaseFactory' maxMicrosecondsPerInvocation='2550' standardDeviationMicrosecondsPerInvocation='328' invocations='73'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='341' totalMilliseconds='16' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='2026' standardDeviationMicrosecondsPerInvocation='509' invocations='49'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='13' totalMilliseconds='13' name='edu.umd.cs.findbugs.classfile.engine.asm.ClassReaderAnalysisEngine' maxMicrosecondsPerInvocation='5801' standardDeviationMicrosecondsPerInvocation='185' invocations='977'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='785' totalMilliseconds='12' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='8999' standardDeviationMicrosecondsPerInvocation='2128' invocations='16'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>